#include<bits/stdc++.h>
using namespace std;


vector<int> bfs(vector<int>adj[],int n){
    vector<bool>vis(n+1,false);
    queue<int>qu;
    vector<int>sol;
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            qu.push(i);
            vis[i] = true;
            while(!qu.empty()){
                int node = qu.front();
                qu.pop();
                sol.push_back(node);
                for(auto x:adj[node]){
                    if(!vis[x]){
                        qu.push(x);
                        vis[x] = true;

                    }
                }
            }
        }
        
    }
    return sol;
}
int main(){
    int n;
        cin >> n;
        vector<int>adj[n+1];
        for(int i=0;i<n;i++){
            int u,v;
            cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        } 
    vector<int>sol = bfs(adj,n);
        for(auto x: sol)
            cout << x << " ";   
}
